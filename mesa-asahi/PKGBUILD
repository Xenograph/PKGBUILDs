# Maintainer: Jos Dehaes <jos.dehaes@gmail.com>
# Maintainer: Matthias Kurz <m.kurz@irregular.at>

highmem=1

_suffix=-asahi

pkgname=(mesa$_suffix lib32-mesa-asahi)
pkgdesc="An open-source implementation of the OpenGL specification"
_asahiver=20241211
_commit=asahi-$_asahiver
pkgver=25.0.0_pre$_asahiver
pkgrel=5
arch=('x86' 'x86_64' 'aarch64')
makedepends=('python-mako' 'libxml2' 'libx11' 'xorgproto' 'libdrm' 'libxshmfence' 'libxxf86vm'
  'libxdamage' 'libvdpau' 'libva' 'wayland' 'wayland-protocols' 'zstd' 'elfutils' 'llvm' 'spirv-llvm-translator'
  'libomxil-bellagio' 'libclc' 'clang' 'libglvnd' 'libunwind' 'lm_sensors' 'libxrandr'
  'systemd' 'valgrind' 'glslang' 'vulkan-icd-loader' 'directx-headers' 'cmake' 'meson' 'python-pycparser' 'python-packaging' 'python-pyaml'
  'erofs-utils' 'lz4' 'patchelf' 'rust-bindgen')

# to build the 32 bit overlay you need these on the host machine
#    'lib32-llvm' 'lib32-llvm-libs' 'lib32-libpciaccess' 'lib32-libglvnd' 'lib32-libxrandr' 'lib32-spirv-tools'
#    'lib32-spirv-llvm-translator' 'lib32-clang' 'lib32-libxfixes' 'lib32-libvdpau' 'lib32-libva' 'lib32-xcb-util-keysyms'

depends=('egl-wayland' 'libdrm' 'wayland' 'libxxf86vm' 'libxdamage' 'libxshmfence' 'libelf' 'libomxil-bellagio'
  'libunwind' 'llvm-libs' 'lm_sensors' 'libglvnd' 'zstd' 'vulkan-icd-loader')
optdepends=('vulkan-mesa-layers: additional vulkan layers')
url="https://www.mesa3d.org/"
license=('custom')
options=('debug' '!lto')
source=(https://gitlab.freedesktop.org/asahi/mesa/-/archive/$_commit/mesa-$_commit.tar.gz
  LICENSE)
sha512sums=('3cffd24548a3303ad318f6ddf9a39d908c503090b1dcc389e4636565e27cdc69a7da28781d59bda092a07918863ac1938f34232b1554545ec5996cbcccaadab2'
  'f9f0d0ccf166fe6cb684478b6f1e1ab1f2850431c06aa041738563eb1808a004e52cdec823c103c9e180f03ffc083e95974d291353f0220fe52ae6d4897fecc7')

prepare() {
  cd mesa-$_commit
}

meson_build() {
  meson mesa-$_commit $BUILDDIR $CROSS \
    --prefix=/usr \
    --libdir=$LIBDIR \
    --libexecdir=$LIBDIR \
    --sbindir=bin \
    -D b_ndebug=false \
    -D b_lto=false \
    -D platforms=x11,wayland \
    -D gallium-drivers=swrast,virgl,asahi,zink \
    -D vulkan-drivers=swrast,asahi \
    -D vulkan-layers=device-select \
    -D egl=enabled \
    -D gallium-extra-hud=true \
    -D gallium-opencl=icd \
    -D gallium-rusticl=$RUSTICL \
    -D gallium-va=enabled \
    -D gallium-vdpau=enabled \
    -D gallium-xa=disabled \
    -D gbm=enabled \
    -D opengl=true \
    -D gles1=enabled \
    -D gles2=enabled \
    -D glvnd=enabled \
    -D glx=dri \
    -D libunwind=disabled \
    -D llvm=enabled \
    -D lmsensors=enabled \
    -D osmesa=true \
    -D shared-glapi=enabled \
    -D microsoft-clc=disabled \
    -D valgrind=disabled \
    -D android-libbacktrace=disabled \
    -D intel-rt=disabled \
    -D shared-llvm=enabled \
    -D build-tests=false

  # Print config
  meson configure --no-pager $BUILDDIR

  ninja -C $BUILDDIR
  meson compile -C $BUILDDIR

  # fake installation to be seperated into packages
  # outside of fakeroot but mesa doesn't need to chown/mod
  DESTDIR="${srcdir}/fakeinstall" meson install -C $BUILDDIR
}

build() {
  # Build only minimal debug info to reduce size
  CFLAGS+=' -g1'
  CXXFLAGS+=' -g1'
  CROSS=''
  LIBDIR=lib
  RUSTICL=true
  BUILDDIR=build

  meson_build
}

_install() {
  local src f dir
  for src; do
    f="${src#fakeinstall/}"
    dir="${pkgdir}/${f%/*}"
    install -m755 -d "${dir}"
    mv -v "${src}" "${dir}/"
  done
}

package_mesa-asahi() {
  provides=('mesa-libgl' 'opengl-driver' 'mesa' 'mesa-asahi' 'vulkan-asahi')
  conflicts=('mesa-libgl' 'mesa' 'mesa-asahi-edge' 'vulkan-swrast')

  LIBDIR=lib

  _install fakeinstall/usr/share/drirc.d/00-mesa-defaults.conf
  _install fakeinstall/usr/share/glvnd/egl_vendor.d/50_mesa.json

  #install libs
  _install fakeinstall/usr/$LIBDIR/dri/*.so
  _install fakeinstall/usr/$LIBDIR/vdpau
  _install fakeinstall/usr/$LIBDIR/gallium-pipe

  _install fakeinstall/usr/$LIBDIR/libMesa*
  _install fakeinstall/usr/$LIBDIR/libRusticl*
  _install fakeinstall/usr/$LIBDIR/lib{gbm,glapi}.so*
  _install fakeinstall/usr/$LIBDIR/gbm/dri_gbm.so*
  _install fakeinstall/usr/$LIBDIR/libOSMesa.so*

  _install fakeinstall/usr/include
  rm -f fakeinstall/usr/$LIBDIR/pkgconfig/{egl,gl}.pc
  _install fakeinstall/usr/$LIBDIR/pkgconfig

  # there's a bug in the _install function, it fails for etc, it creates etc/etc
  mv -v fakeinstall/etc ${pkgdir}/

  # libglvnd support
  _install fakeinstall/usr/$LIBDIR/libGL*
  _install fakeinstall/usr/$LIBDIR/libEG*

  # vulkan support
  _install fakeinstall/usr/share/vulkan
  _install fakeinstall/usr/$LIBDIR/libvulkan*
  _install fakeinstall/usr/$LIBDIR/libgallium*
  _install fakeinstall/usr/$LIBDIR/libVkLayer*

  # glvnd needs a default provider for indirect rendering where it cannot
  # determine the vendor
  ln -s /usr/$LIBDIR/libGLX_mesa.so.0 "${pkgdir}/usr/$LIBDIR/libGLX_system.so.0"

  # make sure there are no files left to install
  find fakeinstall -depth -print0 | xargs -0 rmdir

  install -m644 -Dt "${pkgdir}/usr/share/licenses/${pkgname}" LICENSE
}

build_x86() {
  rm -rf buildx && mkdir -p buildx
  rm -rf fexov
  rm -rf fakeinstall
  rm -rf ${pkgdir:?}/*

  CFLAGS+=' -g1 -m32 -march=i686'
  CXXFLAGS+=' -g1 -m32 -march=i686'
  CROSS='--cross-file=../cross_x86'
  LIBDIR=lib32
  RUSTICL=false
  BUILDDIR=buildx

  meson_build
}

package_lib32-mesa-asahi() {
  arch=(x86_64)
  provides=('lib32-mesa' 'lib32-mesa-asahi' 'lib32-opengl-driver')
  conflicts=('lib32-mesa')

  if [[ "$CARCH" != "x86_64" ]]; then
    return 0
  fi

  build_x86

  #install libs
  _install fakeinstall/usr/$LIBDIR/dri/*.so
  _install fakeinstall/usr/$LIBDIR/vdpau
  _install fakeinstall/usr/$LIBDIR/gallium-pipe

  _install fakeinstall/usr/$LIBDIR/libMesa*
  # _install fakeinstall/usr/$LIBDIR/libRusticl*
  _install fakeinstall/usr/$LIBDIR/lib{gbm,glapi}.so*
  _install fakeinstall/usr/$LIBDIR/gbm/dri_gbm.so*
  _install fakeinstall/usr/$LIBDIR/libOSMesa.so*

  rm -f fakeinstall/usr/$LIBDIR/pkgconfig/{egl,gl}.pc
  _install fakeinstall/usr/$LIBDIR/pkgconfig

  # libglvnd support
  _install fakeinstall/usr/$LIBDIR/libGL*
  _install fakeinstall/usr/$LIBDIR/libEG*

  # vulkan support
  _install fakeinstall/usr/share/vulkan/icd.d
  _install fakeinstall/usr/$LIBDIR/libvulkan*
  _install fakeinstall/usr/$LIBDIR/libgallium*
  _install fakeinstall/usr/$LIBDIR/libVkLayer*

  # glvnd needs a default provider for indirect rendering where it cannot
  # determine the vendor
  ln -s /usr/$LIBDIR/libGLX_mesa.so.0 "${pkgdir}/usr/$LIBDIR/libGLX_system.so.0"
}
